import{ae as f}from"./index-C4QAg8YX.js";/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */const g="ionKeyboardDidShow",p="ionKeyboardDidHide",b=150;let r={},o={},s=!1;const v=()=>{r={},o={},s=!1},k=e=>{if(f.getEngine())y(e);else{if(!e.visualViewport)return;o=d(e.visualViewport),e.visualViewport.onresize=()=>{K(e),l()||D(e)?n(e):i(e)&&a(e)}}},y=e=>{e.addEventListener("keyboardDidShow",t=>n(e,t)),e.addEventListener("keyboardDidHide",()=>a(e))},n=(e,t)=>{E(e,t),s=!0},a=e=>{u(e),s=!1},l=()=>{const e=(r.height-o.height)*o.scale;return!s&&r.width===o.width&&e>b},D=e=>s&&!i(e),i=e=>s&&o.height===e.innerHeight,E=(e,t)=>{const c=t?t.keyboardHeight:e.innerHeight-o.height,h=new CustomEvent(g,{detail:{keyboardHeight:c}});e.dispatchEvent(h)},u=e=>{const t=new CustomEvent(p);e.dispatchEvent(t)},K=e=>{r=Object.assign({},o),o=d(e.visualViewport)},d=e=>({width:Math.round(e.width),height:Math.round(e.height),offsetTop:e.offsetTop,offsetLeft:e.offsetLeft,pageTop:e.pageTop,pageLeft:e.pageLeft,scale:e.scale});export{p as KEYBOARD_DID_CLOSE,g as KEYBOARD_DID_OPEN,d as copyVisualViewport,i as keyboardDidClose,l as keyboardDidOpen,D as keyboardDidResize,v as resetKeyboardAssist,a as setKeyboardClose,n as setKeyboardOpen,k as startKeyboardAssist,K as trackViewportChanges};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5Ym9hcmQyLUJvMVg1RmZyLmpzIiwic291cmNlcyI6WyIuLi8uLi9ub2RlX21vZHVsZXMvQGlvbmljL2NvcmUvY29tcG9uZW50cy9rZXlib2FyZDIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiAoQykgSW9uaWMgaHR0cDovL2lvbmljZnJhbWV3b3JrLmNvbSAtIE1JVCBMaWNlbnNlXG4gKi9cbmltcG9ydCB7IEsgYXMgS2V5Ym9hcmQgfSBmcm9tICcuL2tleWJvYXJkLmpzJztcblxuY29uc3QgS0VZQk9BUkRfRElEX09QRU4gPSAnaW9uS2V5Ym9hcmREaWRTaG93JztcbmNvbnN0IEtFWUJPQVJEX0RJRF9DTE9TRSA9ICdpb25LZXlib2FyZERpZEhpZGUnO1xuY29uc3QgS0VZQk9BUkRfVEhSRVNIT0xEID0gMTUwO1xuLy8gVE9ETyhGVy0yODMyKTogdHlwZXNcbmxldCBwcmV2aW91c1Zpc3VhbFZpZXdwb3J0ID0ge307XG5sZXQgY3VycmVudFZpc3VhbFZpZXdwb3J0ID0ge307XG5sZXQga2V5Ym9hcmRPcGVuID0gZmFsc2U7XG4vKipcbiAqIFRoaXMgaXMgb25seSB1c2VkIGZvciB0ZXN0c1xuICovXG5jb25zdCByZXNldEtleWJvYXJkQXNzaXN0ID0gKCkgPT4ge1xuICAgIHByZXZpb3VzVmlzdWFsVmlld3BvcnQgPSB7fTtcbiAgICBjdXJyZW50VmlzdWFsVmlld3BvcnQgPSB7fTtcbiAgICBrZXlib2FyZE9wZW4gPSBmYWxzZTtcbn07XG5jb25zdCBzdGFydEtleWJvYXJkQXNzaXN0ID0gKHdpbikgPT4ge1xuICAgIGNvbnN0IG5hdGl2ZUVuZ2luZSA9IEtleWJvYXJkLmdldEVuZ2luZSgpO1xuICAgIC8qKlxuICAgICAqIElmIHRoZSBuYXRpdmUga2V5Ym9hcmQgcGx1Z2luIGlzIGF2YWlsYWJsZVxuICAgICAqIHRoZW4gd2UgYXJlIHJ1bm5pbmcgaW4gYSBuYXRpdmUgZW52aXJvbm1lbnQuIEFzIGEgcmVzdWx0XG4gICAgICogd2Ugc2hvdWxkIG9ubHkgbGlzdGVuIG9uIHRoZSBuYXRpdmUgZXZlbnRzIGluc3RlYWQgb2ZcbiAgICAgKiB1c2luZyB0aGUgVmlzdWFsIFZpZXdwb3J0IGFzIHRoZSBJb25pYyB3ZWJ2aWV3IG1hbmlwdWxhdGVzXG4gICAgICogaG93IGl0IHJlc2l6ZXMgc3VjaCB0aGF0IHRoZSBWaXN1YWwgVmlld3BvcnQgQVBJIGlzIG5vdFxuICAgICAqIHJlbGlhYmxlIGhlcmUuXG4gICAgICovXG4gICAgaWYgKG5hdGl2ZUVuZ2luZSkge1xuICAgICAgICBzdGFydE5hdGl2ZUxpc3RlbmVycyh3aW4pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaWYgKCF3aW4udmlzdWFsVmlld3BvcnQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjdXJyZW50VmlzdWFsVmlld3BvcnQgPSBjb3B5VmlzdWFsVmlld3BvcnQod2luLnZpc3VhbFZpZXdwb3J0KTtcbiAgICAgICAgd2luLnZpc3VhbFZpZXdwb3J0Lm9ucmVzaXplID0gKCkgPT4ge1xuICAgICAgICAgICAgdHJhY2tWaWV3cG9ydENoYW5nZXMod2luKTtcbiAgICAgICAgICAgIGlmIChrZXlib2FyZERpZE9wZW4oKSB8fCBrZXlib2FyZERpZFJlc2l6ZSh3aW4pKSB7XG4gICAgICAgICAgICAgICAgc2V0S2V5Ym9hcmRPcGVuKHdpbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChrZXlib2FyZERpZENsb3NlKHdpbikpIHtcbiAgICAgICAgICAgICAgICBzZXRLZXlib2FyZENsb3NlKHdpbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxufTtcbi8qKlxuICogTGlzdGVuIGZvciBldmVudHMgZmlyZWQgYnkgbmF0aXZlIGtleWJvYXJkIHBsdWdpblxuICogaW4gQ2FwYWNpdG9yL0NvcmRvdmEgc28gZGV2cyBvbmx5IG5lZWQgdG8gbGlzdGVuXG4gKiBpbiBvbmUgcGxhY2UuXG4gKi9cbmNvbnN0IHN0YXJ0TmF0aXZlTGlzdGVuZXJzID0gKHdpbikgPT4ge1xuICAgIHdpbi5hZGRFdmVudExpc3RlbmVyKCdrZXlib2FyZERpZFNob3cnLCAoZXYpID0+IHNldEtleWJvYXJkT3Blbih3aW4sIGV2KSk7XG4gICAgd2luLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWJvYXJkRGlkSGlkZScsICgpID0+IHNldEtleWJvYXJkQ2xvc2Uod2luKSk7XG59O1xuY29uc3Qgc2V0S2V5Ym9hcmRPcGVuID0gKHdpbiwgZXYpID0+IHtcbiAgICBmaXJlS2V5Ym9hcmRPcGVuRXZlbnQod2luLCBldik7XG4gICAga2V5Ym9hcmRPcGVuID0gdHJ1ZTtcbn07XG5jb25zdCBzZXRLZXlib2FyZENsb3NlID0gKHdpbikgPT4ge1xuICAgIGZpcmVLZXlib2FyZENsb3NlRXZlbnQod2luKTtcbiAgICBrZXlib2FyZE9wZW4gPSBmYWxzZTtcbn07XG4vKipcbiAqIFJldHVybnMgYHRydWVgIGlmIHRoZSBga2V5Ym9hcmRPcGVuYCBmbGFnIGlzIG5vdFxuICogc2V0LCB0aGUgcHJldmlvdXMgdmlzdWFsIHZpZXdwb3J0IHdpZHRoIGVxdWFsIHRoZSBjdXJyZW50XG4gKiB2aXN1YWwgdmlld3BvcnQgd2lkdGgsIGFuZCBpZiB0aGUgc2NhbGVkIGRpZmZlcmVuY2VcbiAqIG9mIHRoZSBwcmV2aW91cyB2aXN1YWwgdmlld3BvcnQgaGVpZ2h0IG1pbnVzIHRoZSBjdXJyZW50XG4gKiB2aXN1YWwgdmlld3BvcnQgaGVpZ2h0IGlzIGdyZWF0ZXIgdGhhbiBLRVlCT0FSRF9USFJFU0hPTERcbiAqXG4gKiBXZSBuZWVkIHRvIGJlIGFibGUgdG8gYWNjb21tb2RhdGUgdXNlcnMgd2hvIGhhdmUgem9vbWluZ1xuICogZW5hYmxlZCBpbiB0aGVpciBicm93c2VyIChvciBoYXZlIHpvb21lZCBpbiBtYW51YWxseSkgd2hpY2hcbiAqIGlzIHdoeSB3ZSB0YWtlIGludG8gYWNjb3VudCB0aGUgY3VycmVudCB2aXN1YWwgdmlld3BvcnQnc1xuICogc2NhbGUgdmFsdWUuXG4gKi9cbmNvbnN0IGtleWJvYXJkRGlkT3BlbiA9ICgpID0+IHtcbiAgICBjb25zdCBzY2FsZWRIZWlnaHREaWZmZXJlbmNlID0gKHByZXZpb3VzVmlzdWFsVmlld3BvcnQuaGVpZ2h0IC0gY3VycmVudFZpc3VhbFZpZXdwb3J0LmhlaWdodCkgKiBjdXJyZW50VmlzdWFsVmlld3BvcnQuc2NhbGU7XG4gICAgcmV0dXJuICgha2V5Ym9hcmRPcGVuICYmXG4gICAgICAgIHByZXZpb3VzVmlzdWFsVmlld3BvcnQud2lkdGggPT09IGN1cnJlbnRWaXN1YWxWaWV3cG9ydC53aWR0aCAmJlxuICAgICAgICBzY2FsZWRIZWlnaHREaWZmZXJlbmNlID4gS0VZQk9BUkRfVEhSRVNIT0xEKTtcbn07XG4vKipcbiAqIFJldHVybnMgYHRydWVgIGlmIHRoZSBrZXlib2FyZCBpcyBvcGVuLFxuICogYnV0IHRoZSBrZXlib2FyZCBkaWQgbm90IGNsb3NlXG4gKi9cbmNvbnN0IGtleWJvYXJkRGlkUmVzaXplID0gKHdpbikgPT4ge1xuICAgIHJldHVybiBrZXlib2FyZE9wZW4gJiYgIWtleWJvYXJkRGlkQ2xvc2Uod2luKTtcbn07XG4vKipcbiAqIERldGVybWluZSBpZiB0aGUga2V5Ym9hcmQgd2FzIGNsb3NlZFxuICogUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGBrZXlib2FyZE9wZW5gIGZsYWcgaXMgc2V0IGFuZFxuICogdGhlIGN1cnJlbnQgdmlzdWFsIHZpZXdwb3J0IGhlaWdodCBlcXVhbHMgdGhlXG4gKiBsYXlvdXQgdmlld3BvcnQgaGVpZ2h0LlxuICovXG5jb25zdCBrZXlib2FyZERpZENsb3NlID0gKHdpbikgPT4ge1xuICAgIHJldHVybiBrZXlib2FyZE9wZW4gJiYgY3VycmVudFZpc3VhbFZpZXdwb3J0LmhlaWdodCA9PT0gd2luLmlubmVySGVpZ2h0O1xufTtcbi8qKlxuICogRGlzcGF0Y2ggYSBrZXlib2FyZCBvcGVuIGV2ZW50XG4gKi9cbmNvbnN0IGZpcmVLZXlib2FyZE9wZW5FdmVudCA9ICh3aW4sIG5hdGl2ZUV2KSA9PiB7XG4gICAgY29uc3Qga2V5Ym9hcmRIZWlnaHQgPSBuYXRpdmVFdiA/IG5hdGl2ZUV2LmtleWJvYXJkSGVpZ2h0IDogd2luLmlubmVySGVpZ2h0IC0gY3VycmVudFZpc3VhbFZpZXdwb3J0LmhlaWdodDtcbiAgICBjb25zdCBldiA9IG5ldyBDdXN0b21FdmVudChLRVlCT0FSRF9ESURfT1BFTiwge1xuICAgICAgICBkZXRhaWw6IHsga2V5Ym9hcmRIZWlnaHQgfSxcbiAgICB9KTtcbiAgICB3aW4uZGlzcGF0Y2hFdmVudChldik7XG59O1xuLyoqXG4gKiBEaXNwYXRjaCBhIGtleWJvYXJkIGNsb3NlIGV2ZW50XG4gKi9cbmNvbnN0IGZpcmVLZXlib2FyZENsb3NlRXZlbnQgPSAod2luKSA9PiB7XG4gICAgY29uc3QgZXYgPSBuZXcgQ3VzdG9tRXZlbnQoS0VZQk9BUkRfRElEX0NMT1NFKTtcbiAgICB3aW4uZGlzcGF0Y2hFdmVudChldik7XG59O1xuLyoqXG4gKiBHaXZlbiBhIHdpbmRvdyBvYmplY3QsIGNyZWF0ZSBhIGNvcHkgb2ZcbiAqIHRoZSBjdXJyZW50IHZpc3VhbCBhbmQgbGF5b3V0IHZpZXdwb3J0IHN0YXRlc1xuICogd2hpbGUgYWxzbyBwcmVzZXJ2aW5nIHRoZSBwcmV2aW91cyB2aXN1YWwgYW5kXG4gKiBsYXlvdXQgdmlld3BvcnQgc3RhdGVzXG4gKi9cbmNvbnN0IHRyYWNrVmlld3BvcnRDaGFuZ2VzID0gKHdpbikgPT4ge1xuICAgIHByZXZpb3VzVmlzdWFsVmlld3BvcnQgPSBPYmplY3QuYXNzaWduKHt9LCBjdXJyZW50VmlzdWFsVmlld3BvcnQpO1xuICAgIGN1cnJlbnRWaXN1YWxWaWV3cG9ydCA9IGNvcHlWaXN1YWxWaWV3cG9ydCh3aW4udmlzdWFsVmlld3BvcnQpO1xufTtcbi8qKlxuICogQ3JlYXRlcyBhIGRlZXAgY29weSBvZiB0aGUgdmlzdWFsIHZpZXdwb3J0XG4gKiBhdCBhIGdpdmVuIHN0YXRlXG4gKi9cbmNvbnN0IGNvcHlWaXN1YWxWaWV3cG9ydCA9ICh2aXN1YWxWaWV3cG9ydCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIHdpZHRoOiBNYXRoLnJvdW5kKHZpc3VhbFZpZXdwb3J0LndpZHRoKSxcbiAgICAgICAgaGVpZ2h0OiBNYXRoLnJvdW5kKHZpc3VhbFZpZXdwb3J0LmhlaWdodCksXG4gICAgICAgIG9mZnNldFRvcDogdmlzdWFsVmlld3BvcnQub2Zmc2V0VG9wLFxuICAgICAgICBvZmZzZXRMZWZ0OiB2aXN1YWxWaWV3cG9ydC5vZmZzZXRMZWZ0LFxuICAgICAgICBwYWdlVG9wOiB2aXN1YWxWaWV3cG9ydC5wYWdlVG9wLFxuICAgICAgICBwYWdlTGVmdDogdmlzdWFsVmlld3BvcnQucGFnZUxlZnQsXG4gICAgICAgIHNjYWxlOiB2aXN1YWxWaWV3cG9ydC5zY2FsZSxcbiAgICB9O1xufTtcblxuZXhwb3J0IHsgS0VZQk9BUkRfRElEX0NMT1NFLCBLRVlCT0FSRF9ESURfT1BFTiwgY29weVZpc3VhbFZpZXdwb3J0LCBrZXlib2FyZERpZENsb3NlLCBrZXlib2FyZERpZE9wZW4sIGtleWJvYXJkRGlkUmVzaXplLCByZXNldEtleWJvYXJkQXNzaXN0LCBzZXRLZXlib2FyZENsb3NlLCBzZXRLZXlib2FyZE9wZW4sIHN0YXJ0S2V5Ym9hcmRBc3Npc3QsIHRyYWNrVmlld3BvcnRDaGFuZ2VzIH07XG4iXSwibmFtZXMiOlsiS0VZQk9BUkRfRElEX09QRU4iLCJLRVlCT0FSRF9ESURfQ0xPU0UiLCJLRVlCT0FSRF9USFJFU0hPTEQiLCJwcmV2aW91c1Zpc3VhbFZpZXdwb3J0IiwiY3VycmVudFZpc3VhbFZpZXdwb3J0Iiwia2V5Ym9hcmRPcGVuIiwicmVzZXRLZXlib2FyZEFzc2lzdCIsInN0YXJ0S2V5Ym9hcmRBc3Npc3QiLCJ3aW4iLCJLZXlib2FyZCIsInN0YXJ0TmF0aXZlTGlzdGVuZXJzIiwiY29weVZpc3VhbFZpZXdwb3J0IiwidHJhY2tWaWV3cG9ydENoYW5nZXMiLCJrZXlib2FyZERpZE9wZW4iLCJrZXlib2FyZERpZFJlc2l6ZSIsInNldEtleWJvYXJkT3BlbiIsImtleWJvYXJkRGlkQ2xvc2UiLCJzZXRLZXlib2FyZENsb3NlIiwiZXYiLCJmaXJlS2V5Ym9hcmRPcGVuRXZlbnQiLCJmaXJlS2V5Ym9hcmRDbG9zZUV2ZW50Iiwic2NhbGVkSGVpZ2h0RGlmZmVyZW5jZSIsIm5hdGl2ZUV2Iiwia2V5Ym9hcmRIZWlnaHQiLCJ2aXN1YWxWaWV3cG9ydCJdLCJtYXBwaW5ncyI6InlDQUFBO0FBQUE7QUFBQSxHQUtLLE1BQUNBLEVBQW9CLHFCQUNwQkMsRUFBcUIscUJBQ3JCQyxFQUFxQixJQUUzQixJQUFJQyxFQUF5QixDQUFFLEVBQzNCQyxFQUF3QixDQUFFLEVBQzFCQyxFQUFlLEdBSWQsTUFBQ0MsRUFBc0IsSUFBTSxDQUM5QkgsRUFBeUIsQ0FBRSxFQUMzQkMsRUFBd0IsQ0FBRSxFQUMxQkMsRUFBZSxFQUNuQixFQUNNRSxFQUF1QkMsR0FBUSxDQVVqQyxHQVRxQkMsRUFBUyxVQUFXLEVBVXJDQyxFQUFxQkYsQ0FBRyxNQUV2QixDQUNELEdBQUksQ0FBQ0EsRUFBSSxlQUNMLE9BRUpKLEVBQXdCTyxFQUFtQkgsRUFBSSxjQUFjLEVBQzdEQSxFQUFJLGVBQWUsU0FBVyxJQUFNLENBQ2hDSSxFQUFxQkosQ0FBRyxFQUNwQkssRUFBaUIsR0FBSUMsRUFBa0JOLENBQUcsRUFDMUNPLEVBQWdCUCxDQUFHLEVBRWRRLEVBQWlCUixDQUFHLEdBQ3pCUyxFQUFpQlQsQ0FBRyxDQUUzQixDQUNULENBQ0EsRUFNTUUsRUFBd0JGLEdBQVEsQ0FDbENBLEVBQUksaUJBQWlCLGtCQUFvQlUsR0FBT0gsRUFBZ0JQLEVBQUtVLENBQUUsQ0FBQyxFQUN4RVYsRUFBSSxpQkFBaUIsa0JBQW1CLElBQU1TLEVBQWlCVCxDQUFHLENBQUMsQ0FDdkUsRUFDTU8sRUFBa0IsQ0FBQ1AsRUFBS1UsSUFBTyxDQUNqQ0MsRUFBc0JYLEVBQUtVLENBQUUsRUFDN0JiLEVBQWUsRUFDbkIsRUFDTVksRUFBb0JULEdBQVEsQ0FDOUJZLEVBQXVCWixDQUFHLEVBQzFCSCxFQUFlLEVBQ25CLEVBYU1RLEVBQWtCLElBQU0sQ0FDMUIsTUFBTVEsR0FBMEJsQixFQUF1QixPQUFTQyxFQUFzQixRQUFVQSxFQUFzQixNQUN0SCxNQUFRLENBQUNDLEdBQ0xGLEVBQXVCLFFBQVVDLEVBQXNCLE9BQ3ZEaUIsRUFBeUJuQixDQUNqQyxFQUtNWSxFQUFxQk4sR0FDaEJILEdBQWdCLENBQUNXLEVBQWlCUixDQUFHLEVBUTFDUSxFQUFvQlIsR0FDZkgsR0FBZ0JELEVBQXNCLFNBQVdJLEVBQUksWUFLMURXLEVBQXdCLENBQUNYLEVBQUtjLElBQWEsQ0FDN0MsTUFBTUMsRUFBaUJELEVBQVdBLEVBQVMsZUFBaUJkLEVBQUksWUFBY0osRUFBc0IsT0FDOUZjLEVBQUssSUFBSSxZQUFZbEIsRUFBbUIsQ0FDMUMsT0FBUSxDQUFFLGVBQUF1QixDQUFnQixDQUNsQyxDQUFLLEVBQ0RmLEVBQUksY0FBY1UsQ0FBRSxDQUN4QixFQUlNRSxFQUEwQlosR0FBUSxDQUNwQyxNQUFNVSxFQUFLLElBQUksWUFBWWpCLENBQWtCLEVBQzdDTyxFQUFJLGNBQWNVLENBQUUsQ0FDeEIsRUFPTU4sRUFBd0JKLEdBQVEsQ0FDbENMLEVBQXlCLE9BQU8sT0FBTyxDQUFBLEVBQUlDLENBQXFCLEVBQ2hFQSxFQUF3Qk8sRUFBbUJILEVBQUksY0FBYyxDQUNqRSxFQUtNRyxFQUFzQmEsSUFDakIsQ0FDSCxNQUFPLEtBQUssTUFBTUEsRUFBZSxLQUFLLEVBQ3RDLE9BQVEsS0FBSyxNQUFNQSxFQUFlLE1BQU0sRUFDeEMsVUFBV0EsRUFBZSxVQUMxQixXQUFZQSxFQUFlLFdBQzNCLFFBQVNBLEVBQWUsUUFDeEIsU0FBVUEsRUFBZSxTQUN6QixNQUFPQSxFQUFlLEtBQ3pCIiwieF9nb29nbGVfaWdub3JlTGlzdCI6WzBdfQ==
