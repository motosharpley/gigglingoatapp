import{i as u,r as b,h as p,a as f,x as v}from"./index-lhkfOjOH.js";import{n as d,c as h,o as m}from"./if-defined-DRopHhnz.js";const x=u`
  button {
    padding: var(--wui-spacing-4xs) var(--wui-spacing-xxs);
    border-radius: var(--wui-border-radius-3xs);
    background-color: transparent;
    color: var(--wui-color-accent-100);
  }

  button:disabled {
    background-color: transparent;
    color: var(--wui-color-gray-glass-015);
  }

  button:hover {
    background-color: var(--wui-color-gray-glass-005);
  }
`;var l=function(n,o,r,i){var s=arguments.length,t=s<3?o:i===null?i=Object.getOwnPropertyDescriptor(o,r):i,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")t=Reflect.decorate(n,o,r,i);else for(var c=n.length-1;c>=0;c--)(a=n[c])&&(t=(s<3?a(t):s>3?a(o,r,t):a(o,r))||t);return s>3&&t&&Object.defineProperty(o,r,t),t};let e=class extends f{constructor(){super(...arguments),this.tabIdx=void 0,this.disabled=!1,this.color="inherit"}render(){return v`
      <button ?disabled=${this.disabled} tabindex=${m(this.tabIdx)}>
        <slot name="iconLeft"></slot>
        <wui-text variant="small-600" color=${this.color}>
          <slot></slot>
        </wui-text>
        <slot name="iconRight"></slot>
      </button>
    `}};e.styles=[b,p,x];l([d()],e.prototype,"tabIdx",void 0);l([d({type:Boolean})],e.prototype,"disabled",void 0);l([d()],e.prototype,"color",void 0);e=l([h("wui-link")],e);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgtQ3UxdW1BODMuanMiLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9AcmVvd24vYXBwa2l0LXVpL2Rpc3QvZXNtL3NyYy9jb21wb3NpdGVzL3d1aS1saW5rL3N0eWxlcy5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9AcmVvd24vYXBwa2l0LXVpL2Rpc3QvZXNtL3NyYy9jb21wb3NpdGVzL3d1aS1saW5rL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ2xpdCc7XG5leHBvcnQgZGVmYXVsdCBjc3MgYFxuICBidXR0b24ge1xuICAgIHBhZGRpbmc6IHZhcigtLXd1aS1zcGFjaW5nLTR4cykgdmFyKC0td3VpLXNwYWNpbmcteHhzKTtcbiAgICBib3JkZXItcmFkaXVzOiB2YXIoLS13dWktYm9yZGVyLXJhZGl1cy0zeHMpO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiB2YXIoLS13dWktY29sb3ItYWNjZW50LTEwMCk7XG4gIH1cblxuICBidXR0b246ZGlzYWJsZWQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiB2YXIoLS13dWktY29sb3ItZ3JheS1nbGFzcy0wMTUpO1xuICB9XG5cbiAgYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS13dWktY29sb3ItZ3JheS1nbGFzcy0wMDUpO1xuICB9XG5gO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3R5bGVzLmpzLm1hcCIsInZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbmltcG9ydCB7IExpdEVsZW1lbnQsIGh0bWwgfSBmcm9tICdsaXQnO1xuaW1wb3J0IHsgcHJvcGVydHkgfSBmcm9tICdsaXQvZGVjb3JhdG9ycy5qcyc7XG5pbXBvcnQgeyBpZkRlZmluZWQgfSBmcm9tICdsaXQvZGlyZWN0aXZlcy9pZi1kZWZpbmVkLmpzJztcbmltcG9ydCAnLi4vLi4vY29tcG9uZW50cy93dWktdGV4dC9pbmRleC5qcyc7XG5pbXBvcnQgeyBlbGVtZW50U3R5bGVzLCByZXNldFN0eWxlcyB9IGZyb20gJy4uLy4uL3V0aWxzL1RoZW1lVXRpbC5qcyc7XG5pbXBvcnQgeyBjdXN0b21FbGVtZW50IH0gZnJvbSAnLi4vLi4vdXRpbHMvV2ViQ29tcG9uZW50c1V0aWwuanMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlcy5qcyc7XG5sZXQgV3VpTGluayA9IGNsYXNzIFd1aUxpbmsgZXh0ZW5kcyBMaXRFbGVtZW50IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy50YWJJZHggPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jb2xvciA9ICdpbmhlcml0JztcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gaHRtbCBgXG4gICAgICA8YnV0dG9uID9kaXNhYmxlZD0ke3RoaXMuZGlzYWJsZWR9IHRhYmluZGV4PSR7aWZEZWZpbmVkKHRoaXMudGFiSWR4KX0+XG4gICAgICAgIDxzbG90IG5hbWU9XCJpY29uTGVmdFwiPjwvc2xvdD5cbiAgICAgICAgPHd1aS10ZXh0IHZhcmlhbnQ9XCJzbWFsbC02MDBcIiBjb2xvcj0ke3RoaXMuY29sb3J9PlxuICAgICAgICAgIDxzbG90Pjwvc2xvdD5cbiAgICAgICAgPC93dWktdGV4dD5cbiAgICAgICAgPHNsb3QgbmFtZT1cImljb25SaWdodFwiPjwvc2xvdD5cbiAgICAgIDwvYnV0dG9uPlxuICAgIGA7XG4gICAgfVxufTtcbld1aUxpbmsuc3R5bGVzID0gW3Jlc2V0U3R5bGVzLCBlbGVtZW50U3R5bGVzLCBzdHlsZXNdO1xuX19kZWNvcmF0ZShbXG4gICAgcHJvcGVydHkoKVxuXSwgV3VpTGluay5wcm90b3R5cGUsIFwidGFiSWR4XCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBwcm9wZXJ0eSh7IHR5cGU6IEJvb2xlYW4gfSlcbl0sIFd1aUxpbmsucHJvdG90eXBlLCBcImRpc2FibGVkXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBwcm9wZXJ0eSgpXG5dLCBXdWlMaW5rLnByb3RvdHlwZSwgXCJjb2xvclwiLCB2b2lkIDApO1xuV3VpTGluayA9IF9fZGVjb3JhdGUoW1xuICAgIGN1c3RvbUVsZW1lbnQoJ3d1aS1saW5rJylcbl0sIFd1aUxpbmspO1xuZXhwb3J0IHsgV3VpTGluayB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbInN0eWxlcyIsImNzcyIsIl9fZGVjb3JhdGUiLCJkZWNvcmF0b3JzIiwidGFyZ2V0Iiwia2V5IiwiZGVzYyIsImMiLCJyIiwiZCIsImkiLCJXdWlMaW5rIiwiTGl0RWxlbWVudCIsImh0bWwiLCJpZkRlZmluZWQiLCJyZXNldFN0eWxlcyIsImVsZW1lbnRTdHlsZXMiLCJwcm9wZXJ0eSIsImN1c3RvbUVsZW1lbnQiXSwibWFwcGluZ3MiOiIrSEFDQSxNQUFBQSxFQUFlQztBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQSxFQ0RmLElBQUlDLEVBQTBDLFNBQVVDLEVBQVlDLEVBQVFDLEVBQUtDLEVBQU0sQ0FDbkYsSUFBSUMsRUFBSSxVQUFVLE9BQVFDLEVBQUlELEVBQUksRUFBSUgsRUFBU0UsSUFBUyxLQUFPQSxFQUFPLE9BQU8seUJBQXlCRixFQUFRQyxDQUFHLEVBQUlDLEVBQU1HLEVBQzNILEdBQUksT0FBTyxTQUFZLFVBQVksT0FBTyxRQUFRLFVBQWEsV0FBWUQsRUFBSSxRQUFRLFNBQVNMLEVBQVlDLEVBQVFDLEVBQUtDLENBQUksTUFDeEgsU0FBU0ksRUFBSVAsRUFBVyxPQUFTLEVBQUdPLEdBQUssRUFBR0EsS0FBU0QsRUFBSU4sRUFBV08sQ0FBQyxLQUFHRixHQUFLRCxFQUFJLEVBQUlFLEVBQUVELENBQUMsRUFBSUQsRUFBSSxFQUFJRSxFQUFFTCxFQUFRQyxFQUFLRyxDQUFDLEVBQUlDLEVBQUVMLEVBQVFDLENBQUcsSUFBTUcsR0FDaEosT0FBT0QsRUFBSSxHQUFLQyxHQUFLLE9BQU8sZUFBZUosRUFBUUMsRUFBS0csQ0FBQyxFQUFHQSxDQUNoRSxFQVFBLElBQUlHLEVBQVUsY0FBc0JDLENBQVcsQ0FDM0MsYUFBYyxDQUNWLE1BQU0sR0FBRyxTQUFTLEVBQ2xCLEtBQUssT0FBUyxPQUNkLEtBQUssU0FBVyxHQUNoQixLQUFLLE1BQVEsU0FDckIsQ0FDSSxRQUFTLENBQ0wsT0FBT0M7QUFBQUEsMEJBQ1csS0FBSyxRQUFRLGFBQWFDLEVBQVUsS0FBSyxNQUFNLENBQUM7QUFBQTtBQUFBLDhDQUU1QixLQUFLLEtBQUs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBTXhELENBQ0EsRUFDQUgsRUFBUSxPQUFTLENBQUNJLEVBQWFDLEVBQWVoQixDQUFNLEVBQ3BERSxFQUFXLENBQ1BlLEVBQVEsQ0FDWixFQUFHTixFQUFRLFVBQVcsU0FBVSxNQUFNLEVBQ3RDVCxFQUFXLENBQ1BlLEVBQVMsQ0FBRSxLQUFNLE9BQVMsQ0FBQSxDQUM5QixFQUFHTixFQUFRLFVBQVcsV0FBWSxNQUFNLEVBQ3hDVCxFQUFXLENBQ1BlLEVBQVEsQ0FDWixFQUFHTixFQUFRLFVBQVcsUUFBUyxNQUFNLEVBQ3JDQSxFQUFVVCxFQUFXLENBQ2pCZ0IsRUFBYyxVQUFVLENBQzVCLEVBQUdQLENBQU8iLCJ4X2dvb2dsZV9pZ25vcmVMaXN0IjpbMCwxXX0=
