import{i as p,r as f,a as d,x as u}from"./index-lhkfOjOH.js";import{n as g,c as m}from"./if-defined-DRopHhnz.js";const x=p`
  :host {
    position: relative;
    display: flex;
    width: 100%;
    height: 1px;
    background-color: var(--wui-color-gray-glass-005);
    justify-content: center;
    align-items: center;
  }

  :host > wui-text {
    position: absolute;
    padding: 0px 10px;
    background-color: var(--wui-color-modal-bg);
    transition: background-color var(--wui-duration-lg) var(--wui-ease-out-power-1);
    will-change: background-color;
  }
`;var c=function(o,e,r,i){var n=arguments.length,t=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,r):i,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")t=Reflect.decorate(o,e,r,i);else for(var s=o.length-1;s>=0;s--)(a=o[s])&&(t=(n<3?a(t):n>3?a(e,r,t):a(e,r))||t);return n>3&&t&&Object.defineProperty(e,r,t),t};let l=class extends d{constructor(){super(...arguments),this.text=""}render(){return u`${this.template()}`}template(){return this.text?u`<wui-text variant="small-500" color="fg-200">${this.text}</wui-text>`:null}};l.styles=[f,x];c([g()],l.prototype,"text",void 0);l=c([m("wui-separator")],l);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgtQnF0cEFmN2UuanMiLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9AcmVvd24vYXBwa2l0LXVpL2Rpc3QvZXNtL3NyYy9sYXlvdXQvd3VpLXNlcGFyYXRvci9zdHlsZXMuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvQHJlb3duL2FwcGtpdC11aS9kaXN0L2VzbS9zcmMvbGF5b3V0L3d1aS1zZXBhcmF0b3IvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnbGl0JztcbmV4cG9ydCBkZWZhdWx0IGNzcyBgXG4gIDpob3N0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS13dWktY29sb3ItZ3JheS1nbGFzcy0wMDUpO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cblxuICA6aG9zdCA+IHd1aS10ZXh0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcGFkZGluZzogMHB4IDEwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0td3VpLWNvbG9yLW1vZGFsLWJnKTtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIHZhcigtLXd1aS1kdXJhdGlvbi1sZykgdmFyKC0td3VpLWVhc2Utb3V0LXBvd2VyLTEpO1xuICAgIHdpbGwtY2hhbmdlOiBiYWNrZ3JvdW5kLWNvbG9yO1xuICB9XG5gO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3R5bGVzLmpzLm1hcCIsInZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbmltcG9ydCB7IExpdEVsZW1lbnQsIGh0bWwgfSBmcm9tICdsaXQnO1xuaW1wb3J0IHsgcHJvcGVydHkgfSBmcm9tICdsaXQvZGVjb3JhdG9ycy5qcyc7XG5pbXBvcnQgJy4uLy4uL2NvbXBvbmVudHMvd3VpLXRleHQvaW5kZXguanMnO1xuaW1wb3J0IHsgcmVzZXRTdHlsZXMgfSBmcm9tICcuLi8uLi91dGlscy9UaGVtZVV0aWwuanMnO1xuaW1wb3J0IHsgY3VzdG9tRWxlbWVudCB9IGZyb20gJy4uLy4uL3V0aWxzL1dlYkNvbXBvbmVudHNVdGlsLmpzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMuanMnO1xubGV0IFd1aVNlcGFyYXRvciA9IGNsYXNzIFd1aVNlcGFyYXRvciBleHRlbmRzIExpdEVsZW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLnRleHQgPSAnJztcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gaHRtbCBgJHt0aGlzLnRlbXBsYXRlKCl9YDtcbiAgICB9XG4gICAgdGVtcGxhdGUoKSB7XG4gICAgICAgIGlmICh0aGlzLnRleHQpIHtcbiAgICAgICAgICAgIHJldHVybiBodG1sIGA8d3VpLXRleHQgdmFyaWFudD1cInNtYWxsLTUwMFwiIGNvbG9yPVwiZmctMjAwXCI+JHt0aGlzLnRleHR9PC93dWktdGV4dD5gO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn07XG5XdWlTZXBhcmF0b3Iuc3R5bGVzID0gW3Jlc2V0U3R5bGVzLCBzdHlsZXNdO1xuX19kZWNvcmF0ZShbXG4gICAgcHJvcGVydHkoKVxuXSwgV3VpU2VwYXJhdG9yLnByb3RvdHlwZSwgXCJ0ZXh0XCIsIHZvaWQgMCk7XG5XdWlTZXBhcmF0b3IgPSBfX2RlY29yYXRlKFtcbiAgICBjdXN0b21FbGVtZW50KCd3dWktc2VwYXJhdG9yJylcbl0sIFd1aVNlcGFyYXRvcik7XG5leHBvcnQgeyBXdWlTZXBhcmF0b3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJzdHlsZXMiLCJjc3MiLCJfX2RlY29yYXRlIiwiZGVjb3JhdG9ycyIsInRhcmdldCIsImtleSIsImRlc2MiLCJjIiwiciIsImQiLCJpIiwiV3VpU2VwYXJhdG9yIiwiTGl0RWxlbWVudCIsImh0bWwiLCJyZXNldFN0eWxlcyIsInByb3BlcnR5IiwiY3VzdG9tRWxlbWVudCJdLCJtYXBwaW5ncyI6ImlIQUNBLE1BQUFBLEVBQWVDO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBLEVDRGYsSUFBSUMsRUFBMEMsU0FBVUMsRUFBWUMsRUFBUUMsRUFBS0MsRUFBTSxDQUNuRixJQUFJQyxFQUFJLFVBQVUsT0FBUUMsRUFBSUQsRUFBSSxFQUFJSCxFQUFTRSxJQUFTLEtBQU9BLEVBQU8sT0FBTyx5QkFBeUJGLEVBQVFDLENBQUcsRUFBSUMsRUFBTUcsRUFDM0gsR0FBSSxPQUFPLFNBQVksVUFBWSxPQUFPLFFBQVEsVUFBYSxXQUFZRCxFQUFJLFFBQVEsU0FBU0wsRUFBWUMsRUFBUUMsRUFBS0MsQ0FBSSxNQUN4SCxTQUFTSSxFQUFJUCxFQUFXLE9BQVMsRUFBR08sR0FBSyxFQUFHQSxLQUFTRCxFQUFJTixFQUFXTyxDQUFDLEtBQUdGLEdBQUtELEVBQUksRUFBSUUsRUFBRUQsQ0FBQyxFQUFJRCxFQUFJLEVBQUlFLEVBQUVMLEVBQVFDLEVBQUtHLENBQUMsRUFBSUMsRUFBRUwsRUFBUUMsQ0FBRyxJQUFNRyxHQUNoSixPQUFPRCxFQUFJLEdBQUtDLEdBQUssT0FBTyxlQUFlSixFQUFRQyxFQUFLRyxDQUFDLEVBQUdBLENBQ2hFLEVBT0EsSUFBSUcsRUFBZSxjQUEyQkMsQ0FBVyxDQUNyRCxhQUFjLENBQ1YsTUFBTSxHQUFHLFNBQVMsRUFDbEIsS0FBSyxLQUFPLEVBQ3BCLENBQ0ksUUFBUyxDQUNMLE9BQU9DLElBQVEsS0FBSyxTQUFVLENBQUEsRUFDdEMsQ0FDSSxVQUFXLENBQ1AsT0FBSSxLQUFLLEtBQ0VBLGlEQUFxRCxLQUFLLElBQUksY0FFbEUsSUFDZixDQUNBLEVBQ0FGLEVBQWEsT0FBUyxDQUFDRyxFQUFhZCxDQUFNLEVBQzFDRSxFQUFXLENBQ1BhLEVBQVEsQ0FDWixFQUFHSixFQUFhLFVBQVcsT0FBUSxNQUFNLEVBQ3pDQSxFQUFlVCxFQUFXLENBQ3RCYyxFQUFjLGVBQWUsQ0FDakMsRUFBR0wsQ0FBWSIsInhfZ29vZ2xlX2lnbm9yZUxpc3QiOlswLDFdfQ==
