import{i as u,r as p,h as b,K as f,a as h,x as v}from"./index-C4QAg8YX.js";import{n as c,c as m}from"./if-defined-BYYrXBY0.js";const w=u`
  button {
    border-radius: var(--local-border-radius);
    color: var(--wui-color-fg-100);
    padding: var(--local-padding);
  }

  @media (max-width: 700px) {
    button {
      padding: var(--wui-spacing-s);
    }
  }

  button > wui-icon {
    pointer-events: none;
  }

  button:disabled > wui-icon {
    color: var(--wui-color-bg-300) !important;
  }

  button:disabled {
    background-color: transparent;
  }
`;var n=function(r,o,e,s){var a=arguments.length,i=a<3?o:s===null?s=Object.getOwnPropertyDescriptor(o,e):s,d;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(r,o,e,s);else for(var l=r.length-1;l>=0;l--)(d=r[l])&&(i=(a<3?d(i):a>3?d(o,e,i):d(o,e))||i);return a>3&&i&&Object.defineProperty(o,e,i),i};let t=class extends h{constructor(){super(...arguments),this.size="md",this.disabled=!1,this.icon="copy",this.iconColor="inherit"}render(){const o=this.size==="lg"?"--wui-border-radius-xs":"--wui-border-radius-xxs",e=this.size==="lg"?"--wui-spacing-1xs":"--wui-spacing-2xs";return this.style.cssText=`
    --local-border-radius: var(${o});
    --local-padding: var(${e});
`,v`
      <button ?disabled=${this.disabled}>
        <wui-icon color=${this.iconColor} size=${this.size} name=${this.icon}></wui-icon>
      </button>
    `}};t.styles=[p,b,f,w];n([c()],t.prototype,"size",void 0);n([c({type:Boolean})],t.prototype,"disabled",void 0);n([c()],t.prototype,"icon",void 0);n([c()],t.prototype,"iconColor",void 0);t=n([m("wui-icon-link")],t);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgtakp6UVFQeUcuanMiLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9AcmVvd24vYXBwa2l0LXVpL2Rpc3QvZXNtL3NyYy9jb21wb3NpdGVzL3d1aS1pY29uLWxpbmsvc3R5bGVzLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0ByZW93bi9hcHBraXQtdWkvZGlzdC9lc20vc3JjL2NvbXBvc2l0ZXMvd3VpLWljb24tbGluay9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdsaXQnO1xuZXhwb3J0IGRlZmF1bHQgY3NzIGBcbiAgYnV0dG9uIHtcbiAgICBib3JkZXItcmFkaXVzOiB2YXIoLS1sb2NhbC1ib3JkZXItcmFkaXVzKTtcbiAgICBjb2xvcjogdmFyKC0td3VpLWNvbG9yLWZnLTEwMCk7XG4gICAgcGFkZGluZzogdmFyKC0tbG9jYWwtcGFkZGluZyk7XG4gIH1cblxuICBAbWVkaWEgKG1heC13aWR0aDogNzAwcHgpIHtcbiAgICBidXR0b24ge1xuICAgICAgcGFkZGluZzogdmFyKC0td3VpLXNwYWNpbmctcyk7XG4gICAgfVxuICB9XG5cbiAgYnV0dG9uID4gd3VpLWljb24ge1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB9XG5cbiAgYnV0dG9uOmRpc2FibGVkID4gd3VpLWljb24ge1xuICAgIGNvbG9yOiB2YXIoLS13dWktY29sb3ItYmctMzAwKSAhaW1wb3J0YW50O1xuICB9XG5cbiAgYnV0dG9uOmRpc2FibGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgfVxuYDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0eWxlcy5qcy5tYXAiLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgeyBMaXRFbGVtZW50LCBodG1sIH0gZnJvbSAnbGl0JztcbmltcG9ydCB7IHByb3BlcnR5IH0gZnJvbSAnbGl0L2RlY29yYXRvcnMuanMnO1xuaW1wb3J0ICcuLi8uLi9jb21wb25lbnRzL3d1aS1pY29uL2luZGV4LmpzJztcbmltcG9ydCB7IGNvbG9yU3R5bGVzLCBlbGVtZW50U3R5bGVzLCByZXNldFN0eWxlcyB9IGZyb20gJy4uLy4uL3V0aWxzL1RoZW1lVXRpbC5qcyc7XG5pbXBvcnQgeyBjdXN0b21FbGVtZW50IH0gZnJvbSAnLi4vLi4vdXRpbHMvV2ViQ29tcG9uZW50c1V0aWwuanMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlcy5qcyc7XG5sZXQgV3VpSWNvbkxpbmsgPSBjbGFzcyBXdWlJY29uTGluayBleHRlbmRzIExpdEVsZW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLnNpemUgPSAnbWQnO1xuICAgICAgICB0aGlzLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaWNvbiA9ICdjb3B5JztcbiAgICAgICAgdGhpcy5pY29uQ29sb3IgPSAnaW5oZXJpdCc7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgYm9yZGVyUmFkaXVzID0gdGhpcy5zaXplID09PSAnbGcnID8gJy0td3VpLWJvcmRlci1yYWRpdXMteHMnIDogJy0td3VpLWJvcmRlci1yYWRpdXMteHhzJztcbiAgICAgICAgY29uc3QgcGFkZGluZyA9IHRoaXMuc2l6ZSA9PT0gJ2xnJyA/ICctLXd1aS1zcGFjaW5nLTF4cycgOiAnLS13dWktc3BhY2luZy0yeHMnO1xuICAgICAgICB0aGlzLnN0eWxlLmNzc1RleHQgPSBgXG4gICAgLS1sb2NhbC1ib3JkZXItcmFkaXVzOiB2YXIoJHtib3JkZXJSYWRpdXN9KTtcbiAgICAtLWxvY2FsLXBhZGRpbmc6IHZhcigke3BhZGRpbmd9KTtcbmA7XG4gICAgICAgIHJldHVybiBodG1sIGBcbiAgICAgIDxidXR0b24gP2Rpc2FibGVkPSR7dGhpcy5kaXNhYmxlZH0+XG4gICAgICAgIDx3dWktaWNvbiBjb2xvcj0ke3RoaXMuaWNvbkNvbG9yfSBzaXplPSR7dGhpcy5zaXplfSBuYW1lPSR7dGhpcy5pY29ufT48L3d1aS1pY29uPlxuICAgICAgPC9idXR0b24+XG4gICAgYDtcbiAgICB9XG59O1xuV3VpSWNvbkxpbmsuc3R5bGVzID0gW3Jlc2V0U3R5bGVzLCBlbGVtZW50U3R5bGVzLCBjb2xvclN0eWxlcywgc3R5bGVzXTtcbl9fZGVjb3JhdGUoW1xuICAgIHByb3BlcnR5KClcbl0sIFd1aUljb25MaW5rLnByb3RvdHlwZSwgXCJzaXplXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBwcm9wZXJ0eSh7IHR5cGU6IEJvb2xlYW4gfSlcbl0sIFd1aUljb25MaW5rLnByb3RvdHlwZSwgXCJkaXNhYmxlZFwiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgcHJvcGVydHkoKVxuXSwgV3VpSWNvbkxpbmsucHJvdG90eXBlLCBcImljb25cIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIHByb3BlcnR5KClcbl0sIFd1aUljb25MaW5rLnByb3RvdHlwZSwgXCJpY29uQ29sb3JcIiwgdm9pZCAwKTtcbld1aUljb25MaW5rID0gX19kZWNvcmF0ZShbXG4gICAgY3VzdG9tRWxlbWVudCgnd3VpLWljb24tbGluaycpXG5dLCBXdWlJY29uTGluayk7XG5leHBvcnQgeyBXdWlJY29uTGluayB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbInN0eWxlcyIsImNzcyIsIl9fZGVjb3JhdGUiLCJkZWNvcmF0b3JzIiwidGFyZ2V0Iiwia2V5IiwiZGVzYyIsImMiLCJyIiwiaSIsIld1aUljb25MaW5rIiwiTGl0RWxlbWVudCIsImJvcmRlclJhZGl1cyIsInBhZGRpbmciLCJodG1sIiwicmVzZXRTdHlsZXMiLCJlbGVtZW50U3R5bGVzIiwiY29sb3JTdHlsZXMiLCJwcm9wZXJ0eSIsImN1c3RvbUVsZW1lbnQiXSwibWFwcGluZ3MiOiIrSEFDQSxNQUFBQSxFQUFlQztBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQSxFQ0RmLElBQUlDLEVBQTBDLFNBQVVDLEVBQVlDLEVBQVFDLEVBQUtDLEVBQU0sQ0FDbkYsSUFBSUMsRUFBSSxVQUFVLE9BQVFDLEVBQUlELEVBQUksRUFBSUgsRUFBU0UsSUFBUyxLQUFPQSxFQUFPLE9BQU8seUJBQXlCRixFQUFRQyxDQUFHLEVBQUlDLEVBQU0sRUFDM0gsR0FBSSxPQUFPLFNBQVksVUFBWSxPQUFPLFFBQVEsVUFBYSxXQUFZRSxFQUFJLFFBQVEsU0FBU0wsRUFBWUMsRUFBUUMsRUFBS0MsQ0FBSSxNQUN4SCxTQUFTRyxFQUFJTixFQUFXLE9BQVMsRUFBR00sR0FBSyxFQUFHQSxLQUFTLEVBQUlOLEVBQVdNLENBQUMsS0FBR0QsR0FBS0QsRUFBSSxFQUFJLEVBQUVDLENBQUMsRUFBSUQsRUFBSSxFQUFJLEVBQUVILEVBQVFDLEVBQUtHLENBQUMsRUFBSSxFQUFFSixFQUFRQyxDQUFHLElBQU1HLEdBQ2hKLE9BQU9ELEVBQUksR0FBS0MsR0FBSyxPQUFPLGVBQWVKLEVBQVFDLEVBQUtHLENBQUMsRUFBR0EsQ0FDaEUsRUFPQSxJQUFJRSxFQUFjLGNBQTBCQyxDQUFXLENBQ25ELGFBQWMsQ0FDVixNQUFNLEdBQUcsU0FBUyxFQUNsQixLQUFLLEtBQU8sS0FDWixLQUFLLFNBQVcsR0FDaEIsS0FBSyxLQUFPLE9BQ1osS0FBSyxVQUFZLFNBQ3pCLENBQ0ksUUFBUyxDQUNMLE1BQU1DLEVBQWUsS0FBSyxPQUFTLEtBQU8seUJBQTJCLDBCQUMvREMsRUFBVSxLQUFLLE9BQVMsS0FBTyxvQkFBc0Isb0JBQzNELFlBQUssTUFBTSxRQUFVO0FBQUEsaUNBQ0lELENBQVk7QUFBQSwyQkFDbEJDLENBQU87QUFBQSxFQUVuQkM7QUFBQUEsMEJBQ1csS0FBSyxRQUFRO0FBQUEsMEJBQ2IsS0FBSyxTQUFTLFNBQVMsS0FBSyxJQUFJLFNBQVMsS0FBSyxJQUFJO0FBQUE7QUFBQSxLQUc1RSxDQUNBLEVBQ0FKLEVBQVksT0FBUyxDQUFDSyxFQUFhQyxFQUFlQyxFQUFhakIsQ0FBTSxFQUNyRUUsRUFBVyxDQUNQZ0IsRUFBUSxDQUNaLEVBQUdSLEVBQVksVUFBVyxPQUFRLE1BQU0sRUFDeENSLEVBQVcsQ0FDUGdCLEVBQVMsQ0FBRSxLQUFNLE9BQVMsQ0FBQSxDQUM5QixFQUFHUixFQUFZLFVBQVcsV0FBWSxNQUFNLEVBQzVDUixFQUFXLENBQ1BnQixFQUFRLENBQ1osRUFBR1IsRUFBWSxVQUFXLE9BQVEsTUFBTSxFQUN4Q1IsRUFBVyxDQUNQZ0IsRUFBUSxDQUNaLEVBQUdSLEVBQVksVUFBVyxZQUFhLE1BQU0sRUFDN0NBLEVBQWNSLEVBQVcsQ0FDckJpQixFQUFjLGVBQWUsQ0FDakMsRUFBR1QsQ0FBVyIsInhfZ29vZ2xlX2lnbm9yZUxpc3QiOlswLDFdfQ==
