import{i as d,a as g,x as h}from"./index-C4QAg8YX.js";import{n,c as b}from"./if-defined-BYYrXBY0.js";const p=d`
  :host {
    display: block;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-005);
    background: linear-gradient(
      120deg,
      var(--wui-color-bg-200) 5%,
      var(--wui-color-bg-200) 48%,
      var(--wui-color-bg-300) 55%,
      var(--wui-color-bg-300) 60%,
      var(--wui-color-bg-300) calc(60% + 10px),
      var(--wui-color-bg-200) calc(60% + 12px),
      var(--wui-color-bg-200) 100%
    );
    background-size: 250%;
    animation: shimmer 3s linear infinite reverse;
  }

  :host([variant='light']) {
    background: linear-gradient(
      120deg,
      var(--wui-color-bg-150) 5%,
      var(--wui-color-bg-150) 48%,
      var(--wui-color-bg-200) 55%,
      var(--wui-color-bg-200) 60%,
      var(--wui-color-bg-200) calc(60% + 10px),
      var(--wui-color-bg-150) calc(60% + 12px),
      var(--wui-color-bg-150) 100%
    );
    background-size: 250%;
  }

  @keyframes shimmer {
    from {
      background-position: -250% 0;
    }
    to {
      background-position: 250% 0;
    }
  }
`;var t=function(a,i,e,c){var s=arguments.length,r=s<3?i:c===null?c=Object.getOwnPropertyDescriptor(i,e):c,l;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(a,i,e,c);else for(var u=a.length-1;u>=0;u--)(l=a[u])&&(r=(s<3?l(r):s>3?l(i,e,r):l(i,e))||r);return s>3&&r&&Object.defineProperty(i,e,r),r};let o=class extends g{constructor(){super(...arguments),this.width="",this.height="",this.borderRadius="m",this.variant="default"}render(){return this.style.cssText=`
      width: ${this.width};
      height: ${this.height};
      border-radius: ${`clamp(0px,var(--wui-border-radius-${this.borderRadius}), 40px)`};
    `,h`<slot></slot>`}};o.styles=[p];t([n()],o.prototype,"width",void 0);t([n()],o.prototype,"height",void 0);t([n()],o.prototype,"borderRadius",void 0);t([n()],o.prototype,"variant",void 0);o=t([b("wui-shimmer")],o);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgtQjlSTThTTUIuanMiLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9AcmVvd24vYXBwa2l0LXVpL2Rpc3QvZXNtL3NyYy9jb21wb25lbnRzL3d1aS1zaGltbWVyL3N0eWxlcy5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9AcmVvd24vYXBwa2l0LXVpL2Rpc3QvZXNtL3NyYy9jb21wb25lbnRzL3d1aS1zaGltbWVyL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ2xpdCc7XG5leHBvcnQgZGVmYXVsdCBjc3MgYFxuICA6aG9zdCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMXB4IHZhcigtLXd1aS1jb2xvci1ncmF5LWdsYXNzLTAwNSk7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxuICAgICAgMTIwZGVnLFxuICAgICAgdmFyKC0td3VpLWNvbG9yLWJnLTIwMCkgNSUsXG4gICAgICB2YXIoLS13dWktY29sb3ItYmctMjAwKSA0OCUsXG4gICAgICB2YXIoLS13dWktY29sb3ItYmctMzAwKSA1NSUsXG4gICAgICB2YXIoLS13dWktY29sb3ItYmctMzAwKSA2MCUsXG4gICAgICB2YXIoLS13dWktY29sb3ItYmctMzAwKSBjYWxjKDYwJSArIDEwcHgpLFxuICAgICAgdmFyKC0td3VpLWNvbG9yLWJnLTIwMCkgY2FsYyg2MCUgKyAxMnB4KSxcbiAgICAgIHZhcigtLXd1aS1jb2xvci1iZy0yMDApIDEwMCVcbiAgICApO1xuICAgIGJhY2tncm91bmQtc2l6ZTogMjUwJTtcbiAgICBhbmltYXRpb246IHNoaW1tZXIgM3MgbGluZWFyIGluZmluaXRlIHJldmVyc2U7XG4gIH1cblxuICA6aG9zdChbdmFyaWFudD0nbGlnaHQnXSkge1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcbiAgICAgIDEyMGRlZyxcbiAgICAgIHZhcigtLXd1aS1jb2xvci1iZy0xNTApIDUlLFxuICAgICAgdmFyKC0td3VpLWNvbG9yLWJnLTE1MCkgNDglLFxuICAgICAgdmFyKC0td3VpLWNvbG9yLWJnLTIwMCkgNTUlLFxuICAgICAgdmFyKC0td3VpLWNvbG9yLWJnLTIwMCkgNjAlLFxuICAgICAgdmFyKC0td3VpLWNvbG9yLWJnLTIwMCkgY2FsYyg2MCUgKyAxMHB4KSxcbiAgICAgIHZhcigtLXd1aS1jb2xvci1iZy0xNTApIGNhbGMoNjAlICsgMTJweCksXG4gICAgICB2YXIoLS13dWktY29sb3ItYmctMTUwKSAxMDAlXG4gICAgKTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDI1MCU7XG4gIH1cblxuICBAa2V5ZnJhbWVzIHNoaW1tZXIge1xuICAgIGZyb20ge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI1MCUgMDtcbiAgICB9XG4gICAgdG8ge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMjUwJSAwO1xuICAgIH1cbiAgfVxuYDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0eWxlcy5qcy5tYXAiLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgeyBMaXRFbGVtZW50LCBodG1sIH0gZnJvbSAnbGl0JztcbmltcG9ydCB7IHByb3BlcnR5IH0gZnJvbSAnbGl0L2RlY29yYXRvcnMuanMnO1xuaW1wb3J0IHsgY3VzdG9tRWxlbWVudCB9IGZyb20gJy4uLy4uL3V0aWxzL1dlYkNvbXBvbmVudHNVdGlsLmpzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMuanMnO1xubGV0IFd1aVNoaW1tZXIgPSBjbGFzcyBXdWlTaGltbWVyIGV4dGVuZHMgTGl0RWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMud2lkdGggPSAnJztcbiAgICAgICAgdGhpcy5oZWlnaHQgPSAnJztcbiAgICAgICAgdGhpcy5ib3JkZXJSYWRpdXMgPSAnbSc7XG4gICAgICAgIHRoaXMudmFyaWFudCA9ICdkZWZhdWx0JztcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICB0aGlzLnN0eWxlLmNzc1RleHQgPSBgXG4gICAgICB3aWR0aDogJHt0aGlzLndpZHRofTtcbiAgICAgIGhlaWdodDogJHt0aGlzLmhlaWdodH07XG4gICAgICBib3JkZXItcmFkaXVzOiAke2BjbGFtcCgwcHgsdmFyKC0td3VpLWJvcmRlci1yYWRpdXMtJHt0aGlzLmJvcmRlclJhZGl1c30pLCA0MHB4KWB9O1xuICAgIGA7XG4gICAgICAgIHJldHVybiBodG1sIGA8c2xvdD48L3Nsb3Q+YDtcbiAgICB9XG59O1xuV3VpU2hpbW1lci5zdHlsZXMgPSBbc3R5bGVzXTtcbl9fZGVjb3JhdGUoW1xuICAgIHByb3BlcnR5KClcbl0sIFd1aVNoaW1tZXIucHJvdG90eXBlLCBcIndpZHRoXCIsIHZvaWQgMCk7XG5fX2RlY29yYXRlKFtcbiAgICBwcm9wZXJ0eSgpXG5dLCBXdWlTaGltbWVyLnByb3RvdHlwZSwgXCJoZWlnaHRcIiwgdm9pZCAwKTtcbl9fZGVjb3JhdGUoW1xuICAgIHByb3BlcnR5KClcbl0sIFd1aVNoaW1tZXIucHJvdG90eXBlLCBcImJvcmRlclJhZGl1c1wiLCB2b2lkIDApO1xuX19kZWNvcmF0ZShbXG4gICAgcHJvcGVydHkoKVxuXSwgV3VpU2hpbW1lci5wcm90b3R5cGUsIFwidmFyaWFudFwiLCB2b2lkIDApO1xuV3VpU2hpbW1lciA9IF9fZGVjb3JhdGUoW1xuICAgIGN1c3RvbUVsZW1lbnQoJ3d1aS1zaGltbWVyJylcbl0sIFd1aVNoaW1tZXIpO1xuZXhwb3J0IHsgV3VpU2hpbW1lciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbInN0eWxlcyIsImNzcyIsIl9fZGVjb3JhdGUiLCJkZWNvcmF0b3JzIiwidGFyZ2V0Iiwia2V5IiwiZGVzYyIsImMiLCJkIiwiaSIsIld1aVNoaW1tZXIiLCJMaXRFbGVtZW50IiwiaHRtbCIsInByb3BlcnR5IiwiY3VzdG9tRWxlbWVudCJdLCJtYXBwaW5ncyI6InFHQUNBLE1BQUFBLEVBQWVDO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBLEVDRGYsSUFBSUMsRUFBMEMsU0FBVUMsRUFBWUMsRUFBUUMsRUFBS0MsRUFBTSxDQUNuRixJQUFJQyxFQUFJLFVBQVUsT0FBUSxFQUFJQSxFQUFJLEVBQUlILEVBQVNFLElBQVMsS0FBT0EsRUFBTyxPQUFPLHlCQUF5QkYsRUFBUUMsQ0FBRyxFQUFJQyxFQUFNRSxFQUMzSCxHQUFJLE9BQU8sU0FBWSxVQUFZLE9BQU8sUUFBUSxVQUFhLFdBQVksRUFBSSxRQUFRLFNBQVNMLEVBQVlDLEVBQVFDLEVBQUtDLENBQUksTUFDeEgsU0FBU0csRUFBSU4sRUFBVyxPQUFTLEVBQUdNLEdBQUssRUFBR0EsS0FBU0QsRUFBSUwsRUFBV00sQ0FBQyxLQUFHLEdBQUtGLEVBQUksRUFBSUMsRUFBRSxDQUFDLEVBQUlELEVBQUksRUFBSUMsRUFBRUosRUFBUUMsRUFBSyxDQUFDLEVBQUlHLEVBQUVKLEVBQVFDLENBQUcsSUFBTSxHQUNoSixPQUFPRSxFQUFJLEdBQUssR0FBSyxPQUFPLGVBQWVILEVBQVFDLEVBQUssQ0FBQyxFQUFHLENBQ2hFLEVBS0EsSUFBSUssRUFBYSxjQUF5QkMsQ0FBVyxDQUNqRCxhQUFjLENBQ1YsTUFBTSxHQUFHLFNBQVMsRUFDbEIsS0FBSyxNQUFRLEdBQ2IsS0FBSyxPQUFTLEdBQ2QsS0FBSyxhQUFlLElBQ3BCLEtBQUssUUFBVSxTQUN2QixDQUNJLFFBQVMsQ0FDTCxZQUFLLE1BQU0sUUFBVTtBQUFBLGVBQ2QsS0FBSyxLQUFLO0FBQUEsZ0JBQ1QsS0FBSyxNQUFNO0FBQUEsdUJBQ0oscUNBQXFDLEtBQUssWUFBWSxVQUFVO0FBQUEsTUFFeEVDLGdCQUNmLENBQ0EsRUFDQUYsRUFBVyxPQUFTLENBQUNWLENBQU0sRUFDM0JFLEVBQVcsQ0FDUFcsRUFBUSxDQUNaLEVBQUdILEVBQVcsVUFBVyxRQUFTLE1BQU0sRUFDeENSLEVBQVcsQ0FDUFcsRUFBUSxDQUNaLEVBQUdILEVBQVcsVUFBVyxTQUFVLE1BQU0sRUFDekNSLEVBQVcsQ0FDUFcsRUFBUSxDQUNaLEVBQUdILEVBQVcsVUFBVyxlQUFnQixNQUFNLEVBQy9DUixFQUFXLENBQ1BXLEVBQVEsQ0FDWixFQUFHSCxFQUFXLFVBQVcsVUFBVyxNQUFNLEVBQzFDQSxFQUFhUixFQUFXLENBQ3BCWSxFQUFjLGFBQWEsQ0FDL0IsRUFBR0osQ0FBVSIsInhfZ29vZ2xlX2lnbm9yZUxpc3QiOlswLDFdfQ==
